'''
Problem Statement: You are given a sorted array containing N integers and a number X, you have to find the occurrences of X in the given array.
Input: N = 7,  X = 3 , array[] = {2, 2 , 3 , 3 , 3 , 3 , 4}
Output: 4
'''

def firstOccurence(a,n,x):
    low,high=0,n-1 
    first=-1 
    while(low<=high):
        mid=(low+high)//2 
        if(a[mid]==x):
            first=mid 
            high=mid-1 
        elif(a[mid]>x):
            high=mid-1 
        else:
            low=mid+1
    return first
    
def lastOccurence(a,n,x):
    low,high=0,n-1 
    last=-1 
    while(low<=high):
        mid=(low+high)//2 
        if(a[mid]==x):
            last=mid 
            low=mid+1 
        elif(a[mid]>x):
            high=mid-1 
        else:
            low=mid+1 
    return last
    #O(2*logN),O(N)


a=list(map(int,input().split()))
x=int(input())
    
first=firstOccurence(a,len(a),x)
last=lastOccurence(a,len(a),x)
if(first==-1):
    print(-1)
else:
    print(last-first+1)
