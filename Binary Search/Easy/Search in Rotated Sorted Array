'''
Problem Statement: Given an integer array arr of size N, sorted in ascending order (with distinct values) and a target value k. Now the array is rotated at some pivot point unknown to you. Find the index at which k is present and if k is not present return -1.
Input Format: arr = [4,5,6,7,0,1,2,3], k = 0
Result: 4
'''

def bsearch(a,n,k):
    low,high=0,n-1 
    while(low<=high):
        mid=(low+high)//2 
        if(a[mid]==k):
            return mid 
        if(a[low]<=a[mid]):
            if(a[low]<=k and k<=a[mid]):
                high=mid-1 
            else:
                low=mid+1 
        else:
            if(a[mid]<=k and k<=a[high]):
                low=mid+1 
            else:
                high=mid-1 
    return -1
    #O(logN),O(1)

a=list(map(int,input().split()))
k=int(input())
print(bsearch(a,len(a),k))


